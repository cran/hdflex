// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// init_dsc
NumericVector init_dsc(int number_forecasts);
RcppExport SEXP _hdflex_init_dsc(SEXP number_forecastsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type number_forecasts(number_forecastsSEXP);
    rcpp_result_gen = Rcpp::wrap(init_dsc(number_forecasts));
    return rcpp_result_gen;
END_RCPP
}
// forget_dsc
NumericVector forget_dsc(NumericVector weights, double gamma);
RcppExport SEXP _hdflex_forget_dsc(SEXP weightsSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(forget_dsc(weights, gamma));
    return rcpp_result_gen;
END_RCPP
}
// active_models_dsc
List active_models_dsc(NumericVector weights, int psi);
RcppExport SEXP _hdflex_active_models_dsc(SEXP weightsSEXP, SEXP psiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< int >::type psi(psiSEXP);
    rcpp_result_gen = Rcpp::wrap(active_models_dsc(weights, psi));
    return rcpp_result_gen;
END_RCPP
}
// matrix_subset_idx
NumericVector matrix_subset_idx(NumericMatrix mat, IntegerVector col_idx, int t);
RcppExport SEXP _hdflex_matrix_subset_idx(SEXP matSEXP, SEXP col_idxSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type col_idx(col_idxSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_subset_idx(mat, col_idx, t));
    return rcpp_result_gen;
END_RCPP
}
// agg_density_dsc
List agg_density_dsc(NumericVector active_weights, NumericVector oos_target_var, NumericMatrix oos_forecast_tvp, NumericMatrix oos_variance_tvp, IntegerVector idx_sub, int t);
RcppExport SEXP _hdflex_agg_density_dsc(SEXP active_weightsSEXP, SEXP oos_target_varSEXP, SEXP oos_forecast_tvpSEXP, SEXP oos_variance_tvpSEXP, SEXP idx_subSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type active_weights(active_weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type oos_target_var(oos_target_varSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type oos_forecast_tvp(oos_forecast_tvpSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type oos_variance_tvp(oos_variance_tvpSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type idx_sub(idx_subSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(agg_density_dsc(active_weights, oos_target_var, oos_forecast_tvp, oos_variance_tvp, idx_sub, t));
    return rcpp_result_gen;
END_RCPP
}
// update_dsc
NumericVector update_dsc(NumericVector weights, NumericVector oos_target_var, NumericMatrix oos_forecast_tvp, NumericMatrix oos_variance_tvp, int n_models, int t);
RcppExport SEXP _hdflex_update_dsc(SEXP weightsSEXP, SEXP oos_target_varSEXP, SEXP oos_forecast_tvpSEXP, SEXP oos_variance_tvpSEXP, SEXP n_modelsSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type oos_target_var(oos_target_varSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type oos_forecast_tvp(oos_forecast_tvpSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type oos_variance_tvp(oos_variance_tvpSEXP);
    Rcpp::traits::input_parameter< int >::type n_models(n_modelsSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(update_dsc(weights, oos_target_var, oos_forecast_tvp, oos_variance_tvp, n_models, t));
    return rcpp_result_gen;
END_RCPP
}
// dsc_loop
List dsc_loop(NumericVector weights, double gamma, int psi, NumericVector oos_target_var, NumericMatrix oos_forecast_tvp, NumericMatrix oos_variance_tvp, int len_para_grid, int oos_length, int n_models);
RcppExport SEXP _hdflex_dsc_loop(SEXP weightsSEXP, SEXP gammaSEXP, SEXP psiSEXP, SEXP oos_target_varSEXP, SEXP oos_forecast_tvpSEXP, SEXP oos_variance_tvpSEXP, SEXP len_para_gridSEXP, SEXP oos_lengthSEXP, SEXP n_modelsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type oos_target_var(oos_target_varSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type oos_forecast_tvp(oos_forecast_tvpSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type oos_variance_tvp(oos_variance_tvpSEXP);
    Rcpp::traits::input_parameter< int >::type len_para_grid(len_para_gridSEXP);
    Rcpp::traits::input_parameter< int >::type oos_length(oos_lengthSEXP);
    Rcpp::traits::input_parameter< int >::type n_models(n_modelsSEXP);
    rcpp_result_gen = Rcpp::wrap(dsc_loop(weights, gamma, psi, oos_target_var, oos_forecast_tvp, oos_variance_tvp, len_para_grid, oos_length, n_models));
    return rcpp_result_gen;
END_RCPP
}
// init_tvc
List init_tvc(arma::vec& y_var, arma::vec& x_var, int sample_length);
RcppExport SEXP _hdflex_init_tvc(SEXP y_varSEXP, SEXP x_varSEXP, SEXP sample_lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y_var(y_varSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type x_var(x_varSEXP);
    Rcpp::traits::input_parameter< int >::type sample_length(sample_lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(init_tvc(y_var, x_var, sample_length));
    return rcpp_result_gen;
END_RCPP
}
// init_tvc_forecast
List init_tvc_forecast(arma::vec& y_var, arma::vec& x_var, int sample_length);
RcppExport SEXP _hdflex_init_tvc_forecast(SEXP y_varSEXP, SEXP x_varSEXP, SEXP sample_lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y_var(y_varSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type x_var(x_varSEXP);
    Rcpp::traits::input_parameter< int >::type sample_length(sample_lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(init_tvc_forecast(y_var, x_var, sample_length));
    return rcpp_result_gen;
END_RCPP
}
// tvc_model
List tvc_model(arma::vec& y_var, arma::vec& x_var, int i, double lambda, double kappa, arma::mat theta, arma::mat cov_mat, double h);
RcppExport SEXP _hdflex_tvc_model(SEXP y_varSEXP, SEXP x_varSEXP, SEXP iSEXP, SEXP lambdaSEXP, SEXP kappaSEXP, SEXP thetaSEXP, SEXP cov_matSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y_var(y_varSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type x_var(x_varSEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov_mat(cov_matSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(tvc_model(y_var, x_var, i, lambda, kappa, theta, cov_mat, h));
    return rcpp_result_gen;
END_RCPP
}
// tvc_model_loop
List tvc_model_loop(arma::vec& y_var, arma::vec& x_var, double lambda, double kappa, arma::mat theta, arma::mat cov_mat, double h, int ts_length, int drop_length, int max_length);
RcppExport SEXP _hdflex_tvc_model_loop(SEXP y_varSEXP, SEXP x_varSEXP, SEXP lambdaSEXP, SEXP kappaSEXP, SEXP thetaSEXP, SEXP cov_matSEXP, SEXP hSEXP, SEXP ts_lengthSEXP, SEXP drop_lengthSEXP, SEXP max_lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y_var(y_varSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type x_var(x_varSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov_mat(cov_matSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type ts_length(ts_lengthSEXP);
    Rcpp::traits::input_parameter< int >::type drop_length(drop_lengthSEXP);
    Rcpp::traits::input_parameter< int >::type max_length(max_lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(tvc_model_loop(y_var, x_var, lambda, kappa, theta, cov_mat, h, ts_length, drop_length, max_length));
    return rcpp_result_gen;
END_RCPP
}
